// Elementor forms custom webhook
add_action('elementor_pro/forms/new_record', function( $record, $handler ) {
	//make sure its our form
	$form_name = $record->get_form_settings('form_name');
	if ( 'Virtual Care Appointment' !== $form_name ) {
		return;
	}

	$raw_fields = $record->get( 'fields' );

    $ch = curl_init( 'https://apiv2.healthespresso.ca/v1/register/clinic' );
    # Setup request to send json via POST.
    $payload = json_encode( $raw_fields );
    curl_setopt( $ch, CURLOPT_POSTFIELDS, $payload );
    curl_setopt( $ch, CURLOPT_HTTPHEADER, array('Content-Type:application/json'));
    # Return response instead of printing.
    curl_setopt( $ch, CURLOPT_RETURNTRANSFER, true );
    # Send request.
    $result = curl_exec($ch);
    curl_close($ch);
    $redirect_to='https://preview.measuremarketing.net/durhamvirtualcare.com/thank-you/';
    
    // if($result[code]!='200'){
    //     $handler->add_error( $field['token'], $result[message] );
    // }else{
        $handler->add_error( $field['token'], $result[message] );
    //}
    
} );
-----------------------------------------------------------------------------------------------------------------------
// A send custom WebHook
add_action( 'elementor_pro/forms/new_record', function( $record, $handler ) {
    //make sure its our form
    $form_name = $record->get_form_settings( 'form_name' );

    // Replace MY_FORM_NAME with the name you gave your form
    if ( 'MY_FORM_NAME' !== $form_name ) {
        return;
    }

    $raw_fields = $record->get( 'fields' );
    $fields = [];
    foreach ( $raw_fields as $id => $field ) {
        $fields[ $id ] = $field['value'];
    }

    // Replace HTTP://YOUR_WEBHOOK_URL with the actuall URL you want to post the form to
    wp_remote_post( 'HTTP://YOUR_WEBHOOK_URL', [
        'body' => $fields,
    ]);
}, 10, 2 );
----------------------------------------------------------------------------------------------------------

<script>
jQuery(document).ready(function (abc1) {
jQuery("#search_visit").on('submit',(function(abc1) {
const capitalize = (s) => {
if (typeof s !== 'string') return ''
return s.charAt(0).toUpperCase() + s.slice(1)
}
jQuery("#load-gif").show();
abc1.preventDefault();
jQuery.ajax({
url: "https://apiv2.healthespresso.ca/v1/passcode/user",
type: "POST",
dataType: 'json',
data: jQuery('#search_visit').serialize(),
cache: false,
processData:false,
success: function(data){
jQuery(".elementor-field-group-gender input[type=radio]").val([capitalize(data.gender)]);
jQuery('#form-field-clinic_id').val(data.clinic_id);
jQuery('#form-field-first_name').val(data.first_name);
jQuery('#form-field-last_name').val(data.last_name);
jQuery('#form-field-date_of_birth').val(data.date_of_birth);
jQuery('#form-field-email').val(data.email);
jQuery('#form-field-age').val(data.age);
jQuery('#form-field-phone_number').val(data.phone_number);
jQuery('#form-field-blood_type').val(data.blood_type);
jQuery('#form-field-street_address').val(data.street_address);
jQuery('#form-field-city').val(data.city);
jQuery('#form-field-province').val(data.province);
jQuery('#form-field-postal_code').val(data.postal_code);
jQuery('#form-field-health_card_number').val(data.health_card_number);
jQuery('#form-field-family_doctor_if_yes').val(data.family_doctor_if_yes);
jQuery(".elementor-field-group-regular_family_doctor input[type=radio]").val([capitalize(data.regular_family_doctor)]);
jQuery(".elementor-field-group-medical_problem input[type=radio]").val([capitalize(data.medical_problem)]);   
jQuery('#form-field-medical_problem_if_yes').val(data.medical_problem_if_yes);  
jQuery(".elementor-field-group-medications input[type=radio]").val([capitalize(data.medications)]);   
jQuery('#form-field-medications_if_yes').val(data.medications_if_yes);
jQuery(".elementor-field-group-allergies input[type=radio]").val([capitalize(data.allergies)]);   
jQuery('#form-field-allergies_if_yes').val(data.allergies_if_yes);
jQuery('#form-field-token').val(jQuery('#in_visit_token').val());
jQuery(".elementor-field-group-smoker input[type=radio]").val([capitalize(data.smoker)]);
jQuery('.form-control-feedback').html('');
jQuery("#load-gif").hide();
},
error: function(){
jQuery('.form-control-feedback').html('<p style="color:red;">Invalid Token</p>');
jQuery("#load-gif").hide();
}          
});
}));
});
</script>

-----------------------------------------------------------------------------------------------------------------------------------
https://developers.elementor.com/forms-api/
https://developer.wordpress.org/reference/functions/wp_remote_post/
https://developer.wordpress.org/reference/functions/wp_remote_request/
https://wordpress.stackexchange.com/questions/318854/sending-post-request-from-server
https://developer.wordpress.org/plugins/http-api/
